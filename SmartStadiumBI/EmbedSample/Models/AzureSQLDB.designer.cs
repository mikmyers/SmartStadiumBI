#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GAA.IoT.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CrokeParkDatabase")]
	public partial class AzureSQLDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSoundDataRollingAverageModel(SoundDataRollingAverageModel instance);
    partial void UpdateSoundDataRollingAverageModel(SoundDataRollingAverageModel instance);
    partial void DeleteSoundDataRollingAverageModel(SoundDataRollingAverageModel instance);
    partial void InsertSoundData(SoundData instance);
    partial void UpdateSoundData(SoundData instance);
    partial void DeleteSoundData(SoundData instance);
    #endregion
		
		public AzureSQLDBDataContext() : 
				base(global::GAA.IoT.Web.Properties.Settings.Default.CrokeParkDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AzureSQLDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AzureSQLDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AzureSQLDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AzureSQLDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SoundDataRollingAverageModel> SoundDataRollingAverageModels
		{
			get
			{
				return this.GetTable<SoundDataRollingAverageModel>();
			}
		}
		
		public System.Data.Linq.Table<SoundData> SoundDatas
		{
			get
			{
				return this.GetTable<SoundData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SoundDataRollingAverage")]
	public partial class SoundDataRollingAverageModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<double> _AVGLEQ;
		
		private System.Nullable<double> _MAXLAMAX;
		
		private System.Nullable<double> _AVGPressureSquared;
		
		private string _DeviceId;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _DeviceName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAVGLEQChanging(System.Nullable<double> value);
    partial void OnAVGLEQChanged();
    partial void OnMAXLAMAXChanging(System.Nullable<double> value);
    partial void OnMAXLAMAXChanged();
    partial void OnAVGPressureSquaredChanging(System.Nullable<double> value);
    partial void OnAVGPressureSquaredChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    #endregion
		
		public SoundDataRollingAverageModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVGLEQ", DbType="Float")]
		public System.Nullable<double> AVGLEQ
		{
			get
			{
				return this._AVGLEQ;
			}
			set
			{
				if ((this._AVGLEQ != value))
				{
					this.OnAVGLEQChanging(value);
					this.SendPropertyChanging();
					this._AVGLEQ = value;
					this.SendPropertyChanged("AVGLEQ");
					this.OnAVGLEQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAXLAMAX", DbType="Float")]
		public System.Nullable<double> MAXLAMAX
		{
			get
			{
				return this._MAXLAMAX;
			}
			set
			{
				if ((this._MAXLAMAX != value))
				{
					this.OnMAXLAMAXChanging(value);
					this.SendPropertyChanging();
					this._MAXLAMAX = value;
					this.SendPropertyChanged("MAXLAMAX");
					this.OnMAXLAMAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVGPressureSquared", DbType="Float")]
		public System.Nullable<double> AVGPressureSquared
		{
			get
			{
				return this._AVGPressureSquared;
			}
			set
			{
				if ((this._AVGPressureSquared != value))
				{
					this.OnAVGPressureSquaredChanging(value);
					this.SendPropertyChanging();
					this._AVGPressureSquared = value;
					this.SendPropertyChanged("AVGPressureSquared");
					this.OnAVGPressureSquaredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(50)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NChar(10)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SoundData")]
	public partial class SoundData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DeviceId;
		
		private string _DeviceName;
		
		private System.DateTime _Time;
		
		private string _Description;
		
		private string _Stand;
		
		private System.Nullable<double> _LAEQ;
		
		private System.Nullable<double> _LAMax;
		
		private System.Nullable<double> _LA90;
		
		private System.Nullable<double> _LA10;
		
		private System.Nullable<System.DateTime> _UniversalTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStandChanging(string value);
    partial void OnStandChanged();
    partial void OnLAEQChanging(System.Nullable<double> value);
    partial void OnLAEQChanged();
    partial void OnLAMaxChanging(System.Nullable<double> value);
    partial void OnLAMaxChanged();
    partial void OnLA90Changing(System.Nullable<double> value);
    partial void OnLA90Changed();
    partial void OnLA10Changing(System.Nullable<double> value);
    partial void OnLA10Changed();
    partial void OnUniversalTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUniversalTimeChanged();
    #endregion
		
		public SoundData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(200)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stand", DbType="NVarChar(50)")]
		public string Stand
		{
			get
			{
				return this._Stand;
			}
			set
			{
				if ((this._Stand != value))
				{
					this.OnStandChanging(value);
					this.SendPropertyChanging();
					this._Stand = value;
					this.SendPropertyChanged("Stand");
					this.OnStandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAEQ", DbType="Float")]
		public System.Nullable<double> LAEQ
		{
			get
			{
				return this._LAEQ;
			}
			set
			{
				if ((this._LAEQ != value))
				{
					this.OnLAEQChanging(value);
					this.SendPropertyChanging();
					this._LAEQ = value;
					this.SendPropertyChanged("LAEQ");
					this.OnLAEQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAMax", DbType="Float")]
		public System.Nullable<double> LAMax
		{
			get
			{
				return this._LAMax;
			}
			set
			{
				if ((this._LAMax != value))
				{
					this.OnLAMaxChanging(value);
					this.SendPropertyChanging();
					this._LAMax = value;
					this.SendPropertyChanged("LAMax");
					this.OnLAMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA90", DbType="Float")]
		public System.Nullable<double> LA90
		{
			get
			{
				return this._LA90;
			}
			set
			{
				if ((this._LA90 != value))
				{
					this.OnLA90Changing(value);
					this.SendPropertyChanging();
					this._LA90 = value;
					this.SendPropertyChanged("LA90");
					this.OnLA90Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LA10", DbType="Float")]
		public System.Nullable<double> LA10
		{
			get
			{
				return this._LA10;
			}
			set
			{
				if ((this._LA10 != value))
				{
					this.OnLA10Changing(value);
					this.SendPropertyChanging();
					this._LA10 = value;
					this.SendPropertyChanged("LA10");
					this.OnLA10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniversalTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UniversalTime
		{
			get
			{
				return this._UniversalTime;
			}
			set
			{
				if ((this._UniversalTime != value))
				{
					this.OnUniversalTimeChanging(value);
					this.SendPropertyChanging();
					this._UniversalTime = value;
					this.SendPropertyChanged("UniversalTime");
					this.OnUniversalTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
